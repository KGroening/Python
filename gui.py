#p3

from tkinter import  *
from selenium import webdriver
from PIL import Image
import time
import pyautogui
import os

#Main Window

root = Tk()
pyautogui.FAILSAFE = True
root.configure(bg="white")
root.title("Wayne Fueling Systems")

def login():
    #Open Chrome and Log into oracle
    driver = webdriver.Chrome(executable_path=r"c:\users\karl.groening\downloads\chromedriver_win32\chromedriver.exe")
    driver.get("https://erp.doverfs.com/OA_HTML/AppsLocalLogin.jsp?")
    time.sleep(6.0)
    user_name = driver.find_element_by_name("usernameField")
    user_name.send_keys("username")
    password = driver.find_element_by_name("passwordField")
    password.send_keys("password")
    time.sleep(0.1)
    pyautogui.hotkey("enter")
    time.sleep(13.0)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)       
    pyautogui.hotkey("tab")
    time.sleep(0.015)           
    pyautogui.hotkey("enter")
    time.sleep(4.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(4.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(8.03)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(4.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(4.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(0.3)
    pyautogui.alert(text='WIP', title='END', button='OK')

def closeticket():
    #Sets ticket status to whd close from open
    pyautogui.moveTo(99, 1002)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(103, 931)
    pyautogui.click(button = "left")
    pyautogui.hotkey("ctrl", "home")
    time.sleep(0.5)
    pyautogui.moveTo(253, 567)
    pyautogui.click(button = "left")
    time.sleep(0.3)
    pyautogui.hotkey("w")
    pyautogui.hotkey("h")
    pyautogui.hotkey("d")
    time.sleep(1.0)
    #x, y = pyautogui.locateCenterOnScreen("c:\test19\apply.png", grayscale=True)
    #pyautogui.click(x, y)


def populateinconntact():
    #! Put task number in Inconnact
    
    pyautogui.moveTo(99, 1002)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.moveTo(103, 931)
    pyautogui.click(button="left")
    pyautogui.hotkey("ctrl", "home")

    #! Copy SR number

    pyautogui.moveTo(289, 207)
    pyautogui.click(button='left', clicks=2)
    time.sleep(0.5)
    pyautogui.hotkey('ctrl', 'c')

    #! Open Incontact Paste Sr number

    pyautogui.moveTo(99, 1002)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.moveTo(64, 957)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.moveTo(52,  753)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.moveTo(191, 679)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.hotkey("ctrl", "v")
    time.sleep(0.5)
    pyautogui.moveTo(101, 592)
    pyautogui.click(button="left")
    time.sleep(0.015)
    pyautogui.click(button="left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 717)
    pyautogui.click(button="left")

def waiting():
    #Open Chrome and Log into oracle
    driver = webdriver.Chrome(executable_path=r"c:\users\karl.groening\downloads\chromedriver_win32\chromedriver.exe")
    driver.get("https://erp.doverfs.com/OA_HTML/AppsLocalLogin.jsp?")
    time.sleep(6.0)
    user_name = driver.find_element_by_name("usernameField")
    user_name.send_keys("username")
    password = driver.find_element_by_name("passwordField")
    password.send_keys("password")
    time.sleep(0.1)
    pyautogui.hotkey("enter")
    time.sleep(13.0)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(4.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(5.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(9.03)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(5.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(7.3)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("tab")
    time.sleep(0.015)
    pyautogui.hotkey("enter")
    time.sleep(0.015)
    pyautogui.alert(text='Waiting', title='END', button='OK')

def break1():
    #Click the Break 1 Status in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(55, 209)
    pyautogui.click(button = "left")

def lunch():
    #Click the Lunch Status in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(91, 377)
    pyautogui.click(button = "left")  
    time.sleep(1.0)
    driver = webdriver.Chrome(executable_path=r"c:\users\karl.groening\downloads\chromedriver_win32\chromedriver.exe")
    driver.get("https://online.adp.com/eetd2/login.html")
    time.sleep(6.0)
    user_name = driver.find_element_by_id("user_id")
    user_name.send_keys("KGroening@DoverCorp1")
    time.sleep(0.5)
    password = driver.find_element_by_id("password")
    password.send_keys("password")
    time.sleep(0.1)

def break2():
    #Click the Break 2 Status in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(135, 242)
    pyautogui.click(button = "left")  
    

def logout():
    #Click Available Status in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.hotkey("cntrl", "end")
    pyautogui.moveTo(22, 419)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(103, 379)
    pyautogui.click(button = "left")

def ava():
    #Click Available Status in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(69, 118)
    pyautogui.click(button = "left")    

def unava():
    #Click UnAvailable in Incontact
    pyautogui.moveTo(80, 1004)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(97, 961)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(24, 79)
    pyautogui.click(button = "left")
    time.sleep(0.5)
    pyautogui.moveTo(83, 145)
    pyautogui.click(button = "left")    
    
def hold():
    #Set Incontact to hold
    if button7.cget("bg") == "orange":
        button7.config(bg = "white", fg = "blue")
        pyautogui.moveTo(99, 1002)
        pyautogui.click(button='left')
        time.sleep(0.5)
        pyautogui.moveTo(64, 957)                   
        pyautogui.click(button='left')
        time.sleep(0.5)
        pyautogui.moveTo(96, 151)
        pyautogui.click(button = "left")
        time.sleep(0.5)
    else:
        button7.configure(bg = "orange", fg = "white")
        pyautogui.moveTo(99, 1002)
        pyautogui.click(button='left')
        time.sleep(0.5)
        pyautogui.moveTo(64, 957)                   
        pyautogui.click(button='left')
        time.sleep(0.5)
        pyautogui.moveTo(96, 151)
        pyautogui.click(button = "left")
        time.sleep(0.5)
            
def error():
    os.system('\\test19\error.txt')
    
def disp():
    #Select SR and Chose Dispenser for call type
    pyautogui.moveTo(99, 1002)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.moveTo(103, 931)
    pyautogui.click(button='left')
    pyautogui.hotkey('ctrl', 'home')

    #! Copy SR number

    pyautogui.moveTo(289, 207)
    pyautogui.click(button='left', clicks=2)
    time.sleep(0.5)
    pyautogui.hotkey('ctrl', 'c')

    #! Open Incontact Paste Sr number

    pyautogui.moveTo(99, 1002)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.moveTo(64, 957)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.moveTo(52,  753)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.moveTo(191, 679)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.hotkey('ctrl', 'v')
    time.sleep(0.5)
    pyautogui.moveTo(101, 592)
    pyautogui.click(button='left')
    time.sleep(0.2)
    pyautogui.click(button='left')
    time.sleep(0.5)
    pyautogui.moveTo(97, 717)
    pyautogui.click(button='left')

def RSM():
    os.system('\\test19\RSM.png')

#Login/Password to pass to oracle 
label1 = Label(root, text = "Login : ",  bg = "white", fg = "blue")
label1.grid(row = 0, column = 0, sticky = "w")

label2 = Label(root, text  = "Password : ", bg = "white", fg = "blue")
label2.grid(row = 1, column = 0, sticky = "w")

login1 = Entry(root)
login1.grid(row= 0,column = 1)

password = Entry(root)
password.grid(row = 1, column = 1)

button1 = Button(root, text = "WIP", bg = "white", fg = "blue", highlightcolor="orange", command = login)
button1.grid(row = 2, column = 0)

#label3 = Label(root, text = "Call Count", bg = "white", fg = "blue")
#label3.grid(row = 0, column = 2)

#Call = Entry(root)
#Call.grid(row = 0, column = 3)

button2 = Button(root, text = "WAITING", bg = "white", fg = "blue", highlightcolor="orange", command = waiting)
button2.grid(row = 2, column = 1)

button3 = Button(root, text = "Paste SR", bg = "white", fg = "blue", highlightcolor="orange", command = populateinconntact)
button3.grid(row = 2, column = 2)

button4 = Button(root, text ="Log Out", bg = "white", fg = "blue", highlightcolor="orange", command = logout)
button4.grid(row = 3, column = 0)

button8 = Button(root, text = "Unava", fg = "white", bg = "red", highlightcolor="orange", command = unava)
button8.grid(row = 4, column = 0)

button5 = Button(root, text ="Lunch", bg = "white", fg = "blue", highlightcolor="orange", command = lunch)
button5.grid(row = 3, column = 1)

button6 = Button(root, text = "Log In", bg = "white", fg = "blue", highlightcolor="orange", command = login)
button6.grid(row = 3, column = 2)

button9 = Button(root, text = "Ava", bg = "white", fg = "blue", highlightcolor="orange", command = ava)
button9.grid(row = 4, column = 2)

button7 = Button(root, text = "Hold", bg = "white", fg = "blue", highlightcolor="orange", command = hold)
button7.grid(row = 4, column = 1)

button8 = Button(root, text = "iGEM Error Codes", bg = "white", fg = "blue", highlightcolor="orange", command = error)
button8.grid(row = 5, column = 1)

button10 = Button(root, text = "Disp", bg = "white", fg = "blue", highlightcolor="orange", command = disp)
button10.grid(row = 6, column = 0)

button11 = Button(root, text = "Media", bg = "white", fg = "blue")
button11.grid(row = 6, column = 2)

button12 = Button(root, text = "WHD Close", bg = "white", fg = "blue", highlightcolor="orange", command = closeticket)
button12.grid(row = 6, column = 1)

button13 = Button(root, text = "RSM", bg = "white", fg = "blue", highlightcolor = "orange", command = RSM)
button13.grid(row = 5, column = 0)

root.mainloop()
